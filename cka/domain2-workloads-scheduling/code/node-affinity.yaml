apiVersion: v1
kind: Pod
metadata:
  name: nginx-node-affinity
spec:
  containers:
  - name: nginx
    image: nginx:1.25.3
    ports:
    - containerPort: 80
  affinity:
    nodeAffinity:
      # 必需规则 - Pod 必须部署到满足这些规则的节点上
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          # 必须部署到具有 disk=ssd 标签的节点
          - key: disk
            operator: In
            values:
            - ssd
          # 必须部署到具有 kubernetes.io/os=linux 标签的节点
          - key: kubernetes.io/os
            operator: In
            values:
            - linux
      # 偏好规则 - 调度器会尽量满足这些规则，但不是必需的
      preferredDuringSchedulingIgnoredDuringExecution:
      # 权重为80的规则
      - weight: 80
        preference:
          matchExpressions:
          # 优先选择具有 env=prod 标签的节点
          - key: env
            operator: In
            values:
            - prod
      # 权重为20的规则
      - weight: 20
        preference:
          matchExpressions:
          # 其次优先选择具有 zone=us-east-1 标签的节点
          - key: zone
            operator: In
            values:
            - us-east-1

---
# 为了测试 Node Affinity，我们创建一个 Deployment 来看看 Pod 的调度情况
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment-affinity
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-affinity
  template:
    metadata:
      labels:
        app: nginx-affinity
    spec:
      containers:
      - name: nginx
        image: nginx:1.25.3
        ports:
        - containerPort: 80
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disk
                operator: In
                values:
                - ssd
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: env
                operator: In
                values:
                - prod